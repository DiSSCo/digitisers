/*
 * The EBI Search: RESTful Web services
 * This is an API documentation for [EBI Search](https://www.ebi.ac.uk/ebisearch) RESTful Web services.
 *
 * The version of the OpenAPI document: all
 * Contact: www-prod@ebi.ac.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package eu.dissco.digitisers.clients.ebi.openapi.rest;

import eu.dissco.digitisers.clients.ebi.openapi.ApiCallback;
import eu.dissco.digitisers.clients.ebi.openapi.ApiClient;
import eu.dissco.digitisers.clients.ebi.openapi.ApiException;
import eu.dissco.digitisers.clients.ebi.openapi.ApiResponse;
import eu.dissco.digitisers.clients.ebi.openapi.Configuration;
import eu.dissco.digitisers.clients.ebi.openapi.Pair;
import eu.dissco.digitisers.clients.ebi.openapi.ProgressRequestBody;
import eu.dissco.digitisers.clients.ebi.openapi.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import eu.dissco.digitisers.clients.ebi.openapi.model.WSError;
import eu.dissco.digitisers.clients.ebi.openapi.model.WSSearchResult;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class SequenceAnalysisToolResultsSearchApi {
    private ApiClient localVarApiClient;

    public SequenceAnalysisToolResultsSearchApi() {
        this(Configuration.getDefaultApiClient());
    }

    public SequenceAnalysisToolResultsSearchApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    /**
     * Build call for sequencingToolResultsSearch
     * @param domain A single domain identifier (required)
     * @param toolid Identifier of sequencing tool configured in the system. Please check the &#39;seqtoolresults/help&#39; endpoint for more information (required)
     * @param jobid Identifier of sequencing tool job (required)
     * @param accept Accept request HTTP header (optional)
     * @param query Query string (optional)
     * @param size The number of entries to retrieve. limit 1000 for list type and 100 for other types (optional, default to &quot;15&quot;)
     * @param start The index of the first entry in the results. limit 1,000,000 (optional, default to &quot;0&quot;)
     * @param sortfield A single field identifier to sort on. Not allowed to use with &#39;sort&#39; parameter (optional)
     * @param order Whether to sort in ascending/descending order. Should come along with &#39;sortfield&#39; parameter and not allowed to use with &#39;sort&#39; parameter (optional)
     * @param sort Comma separated values of sorting criteria. (field_id:order, e.g. boost:descending,length:descending). Should not be used in conjunction with any of &#39;sortfield&#39; and &#39;order&#39; parameters (optional)
     * @param fields Comma separated values of field identifiers to retrieve (optional)
     * @param fieldurl Whether field links are included. The returned links mean direct URLs to the data entries in the original portals. Valid with XML/JSON only (optional, default to &quot;false&quot;)
     * @param viewurl Whether other view links on an entry are included. Valid with XML/JSON only (optional, default to &quot;false&quot;)
     * @param facetfields Comma separated values of field identifiers associated with facets to retrieve. In case of hierarchical facet, the value for the field can be a path where the nodes are separated by a &#39;/&#39;. i.e.: taxonomy_lineage/1/10239/35268 (taxonomy_lineage is the name of the hierarchical facet and nodes are possible values of the facet). Valid with XML/JSON only (optional)
     * @param facetcount The number of facet values to retrieve. In case of hierarchical facet, the facet count limit the number of children retrieved in a single level. Valid with XML/JSON only. (optional, default to &quot;0&quot;)
     * @param facets A comma separated list of selected facet values (optional)
     * @param feedtitle RSS feed title and required when a selected format parameter is &#39;rss&#39; (optional)
     * @param feedmaxdays The number of days for time window. always used with &#39;feedmasdaysfield&#39; parameter. valid when format is &#39;rss&#39; (optional)
     * @param feedmaxdaysfield A date type field to set time window. always used with &#39;feedmaxdays&#39; parameter. valid when format is &#39;rss&#39; (optional)
     * @param entryattrs Comma separated values of additional entry attributes. Valid with XML/JSON only. (optional)
     * @param hlfields Comma separated values of field identifiers to apply highlighting. Valid with XML/JSON only (optional)
     * @param hlpretag A string appearing before a highlighted term. Valid with XML/JSON only. (optional)
     * @param hlposttag A string appearing after a highlighted term. Valid with XML/JSON only. (optional)
     * @param format Response format (optional)
     * @param tooloutputformat Sequence Tool output format configured in the system (i.e.: ids) if missing a default will be used (optional)
     * @param jobresultsstart Sequence Tool results reading start index (optional)
     * @param jobresultssize Sequence Tool results reading size (optional)
     * @param jobresultsmapfield Sequence Tool results domain field to map on, default is &#39;id&#39; (optional)
     * @param valuemappers Comma separated list of &#39;value mappers&#39; to use on the sequence tool results. Value mappers help in translating the values from the Sequence Search tool results to values in the EBI Search domain. A list of possible values are available in the system configuration (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Invalid parameters </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> A list of entries </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call sequencingToolResultsSearchCall(String domain, String toolid, String jobid, String accept, String query, String size, String start, String sortfield, String order, String sort, String fields, String fieldurl, String viewurl, String facetfields, String facetcount, String facets, String feedtitle, String feedmaxdays, String feedmaxdaysfield, String entryattrs, String hlfields, String hlpretag, String hlposttag, String format, String tooloutputformat, Integer jobresultsstart, Integer jobresultssize, String jobresultsmapfield, String valuemappers, final ApiCallback _callback) throws ApiException {
        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/{domain}/seqtoolresults"
            .replaceAll("\\{" + "domain" + "\\}", localVarApiClient.escapeString(domain.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        if (query != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("query", query));
        }

        if (size != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("size", size));
        }

        if (start != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("start", start));
        }

        if (sortfield != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sortfield", sortfield));
        }

        if (order != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("order", order));
        }

        if (sort != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort", sort));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (fieldurl != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fieldurl", fieldurl));
        }

        if (viewurl != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("viewurl", viewurl));
        }

        if (facetfields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("facetfields", facetfields));
        }

        if (facetcount != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("facetcount", facetcount));
        }

        if (facets != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("facets", facets));
        }

        if (feedtitle != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("feedtitle", feedtitle));
        }

        if (feedmaxdays != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("feedmaxdays", feedmaxdays));
        }

        if (feedmaxdaysfield != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("feedmaxdaysfield", feedmaxdaysfield));
        }

        if (entryattrs != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("entryattrs", entryattrs));
        }

        if (hlfields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("hlfields", hlfields));
        }

        if (hlpretag != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("hlpretag", hlpretag));
        }

        if (hlposttag != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("hlposttag", hlposttag));
        }

        if (format != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("format", format));
        }

        if (toolid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("toolid", toolid));
        }

        if (tooloutputformat != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("tooloutputformat", tooloutputformat));
        }

        if (jobid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("jobid", jobid));
        }

        if (jobresultsstart != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("jobresultsstart", jobresultsstart));
        }

        if (jobresultssize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("jobresultssize", jobresultssize));
        }

        if (jobresultsmapfield != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("jobresultsmapfield", jobresultsmapfield));
        }

        if (valuemappers != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("valuemappers", valuemappers));
        }

        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        if (accept != null) {
            localVarHeaderParams.put("Accept", localVarApiClient.parameterToString(accept));
        }

        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();
        final String[] localVarAccepts = {
            "application/xml", "application/json", "text/csv", "text/tab-separated-values"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        localVarHeaderParams.put("Content-Type", localVarContentType);

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call sequencingToolResultsSearchValidateBeforeCall(String domain, String toolid, String jobid, String accept, String query, String size, String start, String sortfield, String order, String sort, String fields, String fieldurl, String viewurl, String facetfields, String facetcount, String facets, String feedtitle, String feedmaxdays, String feedmaxdaysfield, String entryattrs, String hlfields, String hlpretag, String hlposttag, String format, String tooloutputformat, Integer jobresultsstart, Integer jobresultssize, String jobresultsmapfield, String valuemappers, final ApiCallback _callback) throws ApiException {
        
        // verify the required parameter 'domain' is set
        if (domain == null) {
            throw new ApiException("Missing the required parameter 'domain' when calling sequencingToolResultsSearch(Async)");
        }
        
        // verify the required parameter 'toolid' is set
        if (toolid == null) {
            throw new ApiException("Missing the required parameter 'toolid' when calling sequencingToolResultsSearch(Async)");
        }
        
        // verify the required parameter 'jobid' is set
        if (jobid == null) {
            throw new ApiException("Missing the required parameter 'jobid' when calling sequencingToolResultsSearch(Async)");
        }
        

        okhttp3.Call localVarCall = sequencingToolResultsSearchCall(domain, toolid, jobid, accept, query, size, start, sortfield, order, sort, fields, fieldurl, viewurl, facetfields, facetcount, facets, feedtitle, feedmaxdays, feedmaxdaysfield, entryattrs, hlfields, hlpretag, hlposttag, format, tooloutputformat, jobresultsstart, jobresultssize, jobresultsmapfield, valuemappers, _callback);
        return localVarCall;

    }

    /**
     * Sequencing tool results search
     * Get the results from a Sequencing tool search and map them to a domain, permitting to execute further text and facets filtering
     * @param domain A single domain identifier (required)
     * @param toolid Identifier of sequencing tool configured in the system. Please check the &#39;seqtoolresults/help&#39; endpoint for more information (required)
     * @param jobid Identifier of sequencing tool job (required)
     * @param accept Accept request HTTP header (optional)
     * @param query Query string (optional)
     * @param size The number of entries to retrieve. limit 1000 for list type and 100 for other types (optional, default to &quot;15&quot;)
     * @param start The index of the first entry in the results. limit 1,000,000 (optional, default to &quot;0&quot;)
     * @param sortfield A single field identifier to sort on. Not allowed to use with &#39;sort&#39; parameter (optional)
     * @param order Whether to sort in ascending/descending order. Should come along with &#39;sortfield&#39; parameter and not allowed to use with &#39;sort&#39; parameter (optional)
     * @param sort Comma separated values of sorting criteria. (field_id:order, e.g. boost:descending,length:descending). Should not be used in conjunction with any of &#39;sortfield&#39; and &#39;order&#39; parameters (optional)
     * @param fields Comma separated values of field identifiers to retrieve (optional)
     * @param fieldurl Whether field links are included. The returned links mean direct URLs to the data entries in the original portals. Valid with XML/JSON only (optional, default to &quot;false&quot;)
     * @param viewurl Whether other view links on an entry are included. Valid with XML/JSON only (optional, default to &quot;false&quot;)
     * @param facetfields Comma separated values of field identifiers associated with facets to retrieve. In case of hierarchical facet, the value for the field can be a path where the nodes are separated by a &#39;/&#39;. i.e.: taxonomy_lineage/1/10239/35268 (taxonomy_lineage is the name of the hierarchical facet and nodes are possible values of the facet). Valid with XML/JSON only (optional)
     * @param facetcount The number of facet values to retrieve. In case of hierarchical facet, the facet count limit the number of children retrieved in a single level. Valid with XML/JSON only. (optional, default to &quot;0&quot;)
     * @param facets A comma separated list of selected facet values (optional)
     * @param feedtitle RSS feed title and required when a selected format parameter is &#39;rss&#39; (optional)
     * @param feedmaxdays The number of days for time window. always used with &#39;feedmasdaysfield&#39; parameter. valid when format is &#39;rss&#39; (optional)
     * @param feedmaxdaysfield A date type field to set time window. always used with &#39;feedmaxdays&#39; parameter. valid when format is &#39;rss&#39; (optional)
     * @param entryattrs Comma separated values of additional entry attributes. Valid with XML/JSON only. (optional)
     * @param hlfields Comma separated values of field identifiers to apply highlighting. Valid with XML/JSON only (optional)
     * @param hlpretag A string appearing before a highlighted term. Valid with XML/JSON only. (optional)
     * @param hlposttag A string appearing after a highlighted term. Valid with XML/JSON only. (optional)
     * @param format Response format (optional)
     * @param tooloutputformat Sequence Tool output format configured in the system (i.e.: ids) if missing a default will be used (optional)
     * @param jobresultsstart Sequence Tool results reading start index (optional)
     * @param jobresultssize Sequence Tool results reading size (optional)
     * @param jobresultsmapfield Sequence Tool results domain field to map on, default is &#39;id&#39; (optional)
     * @param valuemappers Comma separated list of &#39;value mappers&#39; to use on the sequence tool results. Value mappers help in translating the values from the Sequence Search tool results to values in the EBI Search domain. A list of possible values are available in the system configuration (optional)
     * @return WSSearchResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Invalid parameters </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> A list of entries </td><td>  -  </td></tr>
     </table>
     */
    public WSSearchResult sequencingToolResultsSearch(String domain, String toolid, String jobid, String accept, String query, String size, String start, String sortfield, String order, String sort, String fields, String fieldurl, String viewurl, String facetfields, String facetcount, String facets, String feedtitle, String feedmaxdays, String feedmaxdaysfield, String entryattrs, String hlfields, String hlpretag, String hlposttag, String format, String tooloutputformat, Integer jobresultsstart, Integer jobresultssize, String jobresultsmapfield, String valuemappers) throws ApiException {
        ApiResponse<WSSearchResult> localVarResp = sequencingToolResultsSearchWithHttpInfo(domain, toolid, jobid, accept, query, size, start, sortfield, order, sort, fields, fieldurl, viewurl, facetfields, facetcount, facets, feedtitle, feedmaxdays, feedmaxdaysfield, entryattrs, hlfields, hlpretag, hlposttag, format, tooloutputformat, jobresultsstart, jobresultssize, jobresultsmapfield, valuemappers);
        return localVarResp.getData();
    }

    /**
     * Sequencing tool results search
     * Get the results from a Sequencing tool search and map them to a domain, permitting to execute further text and facets filtering
     * @param domain A single domain identifier (required)
     * @param toolid Identifier of sequencing tool configured in the system. Please check the &#39;seqtoolresults/help&#39; endpoint for more information (required)
     * @param jobid Identifier of sequencing tool job (required)
     * @param accept Accept request HTTP header (optional)
     * @param query Query string (optional)
     * @param size The number of entries to retrieve. limit 1000 for list type and 100 for other types (optional, default to &quot;15&quot;)
     * @param start The index of the first entry in the results. limit 1,000,000 (optional, default to &quot;0&quot;)
     * @param sortfield A single field identifier to sort on. Not allowed to use with &#39;sort&#39; parameter (optional)
     * @param order Whether to sort in ascending/descending order. Should come along with &#39;sortfield&#39; parameter and not allowed to use with &#39;sort&#39; parameter (optional)
     * @param sort Comma separated values of sorting criteria. (field_id:order, e.g. boost:descending,length:descending). Should not be used in conjunction with any of &#39;sortfield&#39; and &#39;order&#39; parameters (optional)
     * @param fields Comma separated values of field identifiers to retrieve (optional)
     * @param fieldurl Whether field links are included. The returned links mean direct URLs to the data entries in the original portals. Valid with XML/JSON only (optional, default to &quot;false&quot;)
     * @param viewurl Whether other view links on an entry are included. Valid with XML/JSON only (optional, default to &quot;false&quot;)
     * @param facetfields Comma separated values of field identifiers associated with facets to retrieve. In case of hierarchical facet, the value for the field can be a path where the nodes are separated by a &#39;/&#39;. i.e.: taxonomy_lineage/1/10239/35268 (taxonomy_lineage is the name of the hierarchical facet and nodes are possible values of the facet). Valid with XML/JSON only (optional)
     * @param facetcount The number of facet values to retrieve. In case of hierarchical facet, the facet count limit the number of children retrieved in a single level. Valid with XML/JSON only. (optional, default to &quot;0&quot;)
     * @param facets A comma separated list of selected facet values (optional)
     * @param feedtitle RSS feed title and required when a selected format parameter is &#39;rss&#39; (optional)
     * @param feedmaxdays The number of days for time window. always used with &#39;feedmasdaysfield&#39; parameter. valid when format is &#39;rss&#39; (optional)
     * @param feedmaxdaysfield A date type field to set time window. always used with &#39;feedmaxdays&#39; parameter. valid when format is &#39;rss&#39; (optional)
     * @param entryattrs Comma separated values of additional entry attributes. Valid with XML/JSON only. (optional)
     * @param hlfields Comma separated values of field identifiers to apply highlighting. Valid with XML/JSON only (optional)
     * @param hlpretag A string appearing before a highlighted term. Valid with XML/JSON only. (optional)
     * @param hlposttag A string appearing after a highlighted term. Valid with XML/JSON only. (optional)
     * @param format Response format (optional)
     * @param tooloutputformat Sequence Tool output format configured in the system (i.e.: ids) if missing a default will be used (optional)
     * @param jobresultsstart Sequence Tool results reading start index (optional)
     * @param jobresultssize Sequence Tool results reading size (optional)
     * @param jobresultsmapfield Sequence Tool results domain field to map on, default is &#39;id&#39; (optional)
     * @param valuemappers Comma separated list of &#39;value mappers&#39; to use on the sequence tool results. Value mappers help in translating the values from the Sequence Search tool results to values in the EBI Search domain. A list of possible values are available in the system configuration (optional)
     * @return ApiResponse&lt;WSSearchResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Invalid parameters </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> A list of entries </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<WSSearchResult> sequencingToolResultsSearchWithHttpInfo(String domain, String toolid, String jobid, String accept, String query, String size, String start, String sortfield, String order, String sort, String fields, String fieldurl, String viewurl, String facetfields, String facetcount, String facets, String feedtitle, String feedmaxdays, String feedmaxdaysfield, String entryattrs, String hlfields, String hlpretag, String hlposttag, String format, String tooloutputformat, Integer jobresultsstart, Integer jobresultssize, String jobresultsmapfield, String valuemappers) throws ApiException {
        okhttp3.Call localVarCall = sequencingToolResultsSearchValidateBeforeCall(domain, toolid, jobid, accept, query, size, start, sortfield, order, sort, fields, fieldurl, viewurl, facetfields, facetcount, facets, feedtitle, feedmaxdays, feedmaxdaysfield, entryattrs, hlfields, hlpretag, hlposttag, format, tooloutputformat, jobresultsstart, jobresultssize, jobresultsmapfield, valuemappers, null);
        Type localVarReturnType = new TypeToken<WSSearchResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Sequencing tool results search (asynchronously)
     * Get the results from a Sequencing tool search and map them to a domain, permitting to execute further text and facets filtering
     * @param domain A single domain identifier (required)
     * @param toolid Identifier of sequencing tool configured in the system. Please check the &#39;seqtoolresults/help&#39; endpoint for more information (required)
     * @param jobid Identifier of sequencing tool job (required)
     * @param accept Accept request HTTP header (optional)
     * @param query Query string (optional)
     * @param size The number of entries to retrieve. limit 1000 for list type and 100 for other types (optional, default to &quot;15&quot;)
     * @param start The index of the first entry in the results. limit 1,000,000 (optional, default to &quot;0&quot;)
     * @param sortfield A single field identifier to sort on. Not allowed to use with &#39;sort&#39; parameter (optional)
     * @param order Whether to sort in ascending/descending order. Should come along with &#39;sortfield&#39; parameter and not allowed to use with &#39;sort&#39; parameter (optional)
     * @param sort Comma separated values of sorting criteria. (field_id:order, e.g. boost:descending,length:descending). Should not be used in conjunction with any of &#39;sortfield&#39; and &#39;order&#39; parameters (optional)
     * @param fields Comma separated values of field identifiers to retrieve (optional)
     * @param fieldurl Whether field links are included. The returned links mean direct URLs to the data entries in the original portals. Valid with XML/JSON only (optional, default to &quot;false&quot;)
     * @param viewurl Whether other view links on an entry are included. Valid with XML/JSON only (optional, default to &quot;false&quot;)
     * @param facetfields Comma separated values of field identifiers associated with facets to retrieve. In case of hierarchical facet, the value for the field can be a path where the nodes are separated by a &#39;/&#39;. i.e.: taxonomy_lineage/1/10239/35268 (taxonomy_lineage is the name of the hierarchical facet and nodes are possible values of the facet). Valid with XML/JSON only (optional)
     * @param facetcount The number of facet values to retrieve. In case of hierarchical facet, the facet count limit the number of children retrieved in a single level. Valid with XML/JSON only. (optional, default to &quot;0&quot;)
     * @param facets A comma separated list of selected facet values (optional)
     * @param feedtitle RSS feed title and required when a selected format parameter is &#39;rss&#39; (optional)
     * @param feedmaxdays The number of days for time window. always used with &#39;feedmasdaysfield&#39; parameter. valid when format is &#39;rss&#39; (optional)
     * @param feedmaxdaysfield A date type field to set time window. always used with &#39;feedmaxdays&#39; parameter. valid when format is &#39;rss&#39; (optional)
     * @param entryattrs Comma separated values of additional entry attributes. Valid with XML/JSON only. (optional)
     * @param hlfields Comma separated values of field identifiers to apply highlighting. Valid with XML/JSON only (optional)
     * @param hlpretag A string appearing before a highlighted term. Valid with XML/JSON only. (optional)
     * @param hlposttag A string appearing after a highlighted term. Valid with XML/JSON only. (optional)
     * @param format Response format (optional)
     * @param tooloutputformat Sequence Tool output format configured in the system (i.e.: ids) if missing a default will be used (optional)
     * @param jobresultsstart Sequence Tool results reading start index (optional)
     * @param jobresultssize Sequence Tool results reading size (optional)
     * @param jobresultsmapfield Sequence Tool results domain field to map on, default is &#39;id&#39; (optional)
     * @param valuemappers Comma separated list of &#39;value mappers&#39; to use on the sequence tool results. Value mappers help in translating the values from the Sequence Search tool results to values in the EBI Search domain. A list of possible values are available in the system configuration (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 400 </td><td> Invalid parameters </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> A list of entries </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call sequencingToolResultsSearchAsync(String domain, String toolid, String jobid, String accept, String query, String size, String start, String sortfield, String order, String sort, String fields, String fieldurl, String viewurl, String facetfields, String facetcount, String facets, String feedtitle, String feedmaxdays, String feedmaxdaysfield, String entryattrs, String hlfields, String hlpretag, String hlposttag, String format, String tooloutputformat, Integer jobresultsstart, Integer jobresultssize, String jobresultsmapfield, String valuemappers, final ApiCallback<WSSearchResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = sequencingToolResultsSearchValidateBeforeCall(domain, toolid, jobid, accept, query, size, start, sortfield, order, sort, fields, fieldurl, viewurl, facetfields, facetcount, facets, feedtitle, feedmaxdays, feedmaxdaysfield, entryattrs, hlfields, hlpretag, hlposttag, format, tooloutputformat, jobresultsstart, jobresultssize, jobresultsmapfield, valuemappers, _callback);
        Type localVarReturnType = new TypeToken<WSSearchResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
